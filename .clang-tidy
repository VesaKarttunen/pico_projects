# Note that "Checks" is a string, and thus comments are passed
# into the parsed value if not limited by comma from both sides.
Checks: >
  bugprone-*,
  -bugprone-exception-escape,
  -bugprone-macro-parentheses,

  cert-*,
  -cert-err58-cpp,

  clang-analyzer-*,

  cppcoreguidelines-*,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-avoid-non-const-global-variables,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-pro-type-vararg,

  hicpp-*,
  -hicpp-use-auto,
  -hicpp-uppercase-literal-suffix,
  -hicpp-vararg,

  misc-*,
  -misc-const-correctness,
  -misc-include-cleaner,
  -misc-use-anonymous-namespace,

  modernize-*,
  -modernize-use-nodiscard,
  -modernize-use-std-print,
  -modernize-use-trailing-return-type,

  performance-*,
  -performance-enum-size,

  portability-*,

  readability-*,
  -readability-else-after-return,
  -readability-identifier-length,
  -readability-magic-numbers,
  -readability-redundant-inline-specifier,

WarningsAsErrors: "*"

CheckOptions:
- key:   bugprone-misplaced-widening-cast.CheckImplicitCasts
  value: true
- key:   modernize-use-auto.MinTypeNameLength
  value: 8
- key: readability-function-cognitive-complexity.IgnoreMacros
  value: true
- key:   readability-uppercase-literal-suffix.NewSuffixes
  value: "f;u;L;uL;uLL"
- key:   readability-identifier-naming.ClassCase
  value: "CamelCase"
- key:   readability-identifier-naming.PrivateMemberCase
  value: lower_case
- key:   readability-identifier-naming.PrivateMemberIgnoredRegexp
  value: ".*(_C|_s|_ms|_V)$"
- key:   readability-identifier-naming.PrivateMemberPrefix
  value: m_
- key:   readability-identifier-naming.EnumCase
  value: CamelCase
- key:   readability-identifier-naming.EnumConstantCase
  value: UPPER_CASE
- key:   readability-identifier-naming.FunctionCase
  value: CamelCase
- key:   readability-identifier-naming.FunctionIgnoredRegexp
  value: ".*(_C|_s|_ms|_1s|_100ms|_60s|_V)$"
- key:   readability-identifier-naming.MacroDefinitionCase
  value: UPPER_CASE
- key:   readability-identifier-naming.NamespaceCase
  value: lower_case
- key:   readability-identifier-naming.ParameterCase
  value: lower_case
- key:   readability-identifier-naming.ParameterIgnoredRegexp
  value: ".*(_C|_s|_ms|_V)$"
- key:   readability-identifier-naming.StructCase
  value: CamelCase
- key:   readability-identifier-naming.TypeAliasCase
  value: CamelCase
- key:   readability-identifier-naming.VariableCase
  value: lower_case
- key:   readability-identifier-naming.VariableIgnoredRegexp
  value: ".*(_C|_s|_ms|_V)$"

# By default, clang-tidy does not show errors from any header files. Note that the regex
# filter below is inclusive. Thus, you need to filter IN what you want to see.
# Filter below displays errors from all the (non-system) headers.
HeaderFilterRegex: ".*"

HeaderFileExtensions:         ["hpp","h"]
ImplementationFileExtensions: ["cpp","c"]

UseColor: true

FormatStyle: "file"
