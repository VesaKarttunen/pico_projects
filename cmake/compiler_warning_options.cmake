# List of compiler warnings when using GNU/GCC compiler
set(CompilerWarningsAllGnu
    -fdiagnostics-color
    -Wall
    -Wextra
    -Wpedantic
    -Werror
    -pedantic-errors
    # Above this line are all the typical warnings
    #-----------------------------------------------------------
    # Below this line are extra warnings in alphabetical order
    -Walloca
    -Walloc-zero
    -Warith-conversion
    -Warray-bounds=2
    -Wattribute-alias=2
    -Wbidi-chars=any,ucn
    -Wbuiltin-declaration-mismatch
    -Wbuiltin-macro-redefined
    -Wcast-qual
    -Wcast-align=strict
    -Wchanges-meaning
    -Wconditionally-supported
    -Wconversion
    -Wdate-time
    -Wdeprecated
    -Wdisabled-optimization
    -Wdouble-promotion
    -Wduplicated-branches
    -Wduplicated-cond
    -Wenum-conversion
    -Wextra-semi
    -Wfloat-equal
    -Wformat=2
    -Wformat-signedness
    -Wimplicit-fallthrough=5
    -Winline
    -Winvalid-constexpr
    -Winvalid-imported-macros
    -Winvalid-pch
    -Winvalid-utf8
    -Wlogical-op
    -Wmismatched-tags
    -Wmissing-declarations
    -Wmissing-include-dirs
    -Wmissing-template-keyword
    -Wmultichar
    -Wmultiple-inheritance
    -Wnon-virtual-dtor
    -Wnormalized
    -Wnull-dereference
    -Wold-style-cast
    -Woverloaded-virtual
    -Wpacked
    -Wplacement-new=2
    -Wredundant-decls
    -Wredundant-tags
    -Wreturn-local-addr
    -Wshadow=global
    -Wshadow=local
    -Wshift-negative-value
    -Wshift-overflow=2
    -Wsign-conversion
    -Wsign-promo
    -Wstrict-null-sentinel
    -Wstrict-overflow=3
    -Wsuggest-final-methods
    -Wsuggest-final-types
    -Wsuggest-override
    -Wswitch-default
    -Wswitch-enum
    -Wtrampolines
    -Wtrivial-auto-var-init
    -Wundef
    -Wuninitialized
    -Wunused
    -Wunused-const-variable
    -Wunused-macros
    -Wunsafe-loop-optimizations
    -Wuseless-cast
    -Wvector-operation-performance
    -Wvla
    -Wwrite-strings
    -Wxor-used-as-pow
    -Wzero-as-null-pointer-constant)

# List of compiler warnings when using Clang compiler
set(CompilerWarningsAllClang
    -fdiagnostics-color
    -Weverything
    -Werror
    -pedantic
    -pedantic-errors
    -Wno-c++98-compat
    -Wno-c++98-compat-pedantic
    -Wno-covered-switch-default
    -Wno-missing-noreturn
    -Wno-nonportable-system-include-path
    -Wno-padded
    -Wno-unsafe-buffer-usage)

# Choose the applied set of compiler warnings based on the selected compiler.
# This is done because GNU and Clang support somewhat different warnings.
if(CMAKE_CXX_COMPILER_ID MATCHES GNU)
    set(CompilerWarningsAll
        ${CompilerWarningsAllGnu})
elseif(CMAKE_CXX_COMPILER_ID MATCHES Clang)
    set(CompilerWarningsAll
        ${CompilerWarningsAllClang})
endif()
